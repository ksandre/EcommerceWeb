// <auto-generated />
using System;
using Ecommerce.Persistence.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ecommerce.Persistence.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240716222116_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Ecommerce.Domain.Product.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("Hex")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SizeId")
                        .HasColumnType("int");

                    b.HasKey("ColorId");

                    b.HasIndex("SizeId");

                    b.ToTable("Colors");

                    b.HasData(
                        new
                        {
                            ColorId = 13,
                            Hex = "#ff0000",
                            Name = "Cherry",
                            SizeId = 1
                        },
                        new
                        {
                            ColorId = 14,
                            Hex = "#cc7700",
                            Name = "Violet",
                            SizeId = 2
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Media", b =>
                {
                    b.Property<int>("MediaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MediaId"));

                    b.Property<int?>("ColorId")
                        .HasColumnType("int");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MediaId");

                    b.HasIndex("ColorId");

                    b.ToTable("Medias");

                    b.HasData(
                        new
                        {
                            MediaId = 11,
                            ColorId = 13,
                            Priority = 1,
                            Type = 0,
                            Url = "https://s3-eu-central-1.amazonaws.com/gpc.prod.storage/uploads/body_shop/product_media_url/image/32396/49845_1_thumb.png"
                        },
                        new
                        {
                            MediaId = 12,
                            ColorId = 13,
                            Priority = 2,
                            Type = 0,
                            Url = "https://s3-eu-central-1.amazonaws.com/gpc.prod.storage/uploads/body_shop/product_media_url/image/32398/49845_2_thumb.png"
                        },
                        new
                        {
                            MediaId = 13,
                            ColorId = 13,
                            Priority = 3,
                            Type = 0,
                            Url = "https://s3-eu-central-1.amazonaws.com/gpc.prod.storage/uploads/body_shop/product_media_url/image/32400/49845_3_thumb.png"
                        },
                        new
                        {
                            MediaId = 14,
                            ColorId = 14,
                            Priority = 4,
                            Type = 0,
                            Url = "https://s3-eu-central-1.amazonaws.com/gpc.prod.storage/uploads/body_shop/product_media_url/image/32402/49845_4_thumb.png"
                        },
                        new
                        {
                            MediaId = 15,
                            ColorId = 14,
                            Priority = 5,
                            Type = 0,
                            Url = "https://s3-eu-central-1.amazonaws.com/gpc.prod.storage/uploads/body_shop/product_media_url/image/32404/49845_5_thumb.png"
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Price", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PriceId"));

                    b.Property<decimal>("DiscountPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<decimal>("InitialPrice")
                        .HasPrecision(18, 4)
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("MaxQuantity")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("PriceId");

                    b.HasIndex("ProductId")
                        .IsUnique()
                        .HasFilter("[ProductId] IS NOT NULL");

                    b.ToTable("Prices");

                    b.HasData(
                        new
                        {
                            PriceId = 7,
                            DiscountPrice = 8.75m,
                            InitialPrice = 12.25m,
                            MaxQuantity = 2,
                            ProductId = 260
                        },
                        new
                        {
                            PriceId = 8,
                            DiscountPrice = 7.75m,
                            InitialPrice = 32.25m,
                            MaxQuantity = 5,
                            ProductId = 261
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("CategorySlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubCategorySlug")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 260,
                            CategorySlug = "makeup",
                            Description = "ეს ტუჩსაცხი გამორჩეულია დამატენიანებელი მოქმედებით და მდგრადობით.",
                            Id = 0,
                            Name = "შემავსებელი ტუჩსაცხი",
                            Slug = "peptalk-lipstick-bullet-refill",
                            SubCategorySlug = "lips"
                        },
                        new
                        {
                            ProductId = 261,
                            CategorySlug = "makeup",
                            Description = "ეს ბალზამი შექმნილია 95%  დამატენიანებელი ინგრედიენტებით, მათ შორის შის კარაქით, განადან.",
                            Id = 0,
                            Name = "Swipe It ტუჩის დამატენიანებელი ბალზამი",
                            Slug = "swipe-it-moisturising-lip-balm",
                            SubCategorySlug = "lips"
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Size", b =>
                {
                    b.Property<int>("SizeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SizeId"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("SizeUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SizeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SizeId");

                    b.HasIndex("ProductId");

                    b.ToTable("Sizes");

                    b.HasData(
                        new
                        {
                            SizeId = 1,
                            ProductId = 260,
                            SizeUnit = "გრ",
                            SizeValue = "4.0"
                        },
                        new
                        {
                            SizeId = 2,
                            ProductId = 261,
                            SizeUnit = "გრ",
                            SizeValue = "15.0"
                        });
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Color", b =>
                {
                    b.HasOne("Ecommerce.Domain.Product.Size", "Size")
                        .WithMany("Colors")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Media", b =>
                {
                    b.HasOne("Ecommerce.Domain.Product.Color", "Color")
                        .WithMany("Media")
                        .HasForeignKey("ColorId");

                    b.Navigation("Color");
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Price", b =>
                {
                    b.HasOne("Ecommerce.Domain.Product.Product", "Product")
                        .WithOne("Price")
                        .HasForeignKey("Ecommerce.Domain.Product.Price", "ProductId");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Size", b =>
                {
                    b.HasOne("Ecommerce.Domain.Product.Product", "Product")
                        .WithMany("Size")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Color", b =>
                {
                    b.Navigation("Media");
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Product", b =>
                {
                    b.Navigation("Price");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Ecommerce.Domain.Product.Size", b =>
                {
                    b.Navigation("Colors");
                });
#pragma warning restore 612, 618
        }
    }
}
